{"version":3,"sources":["components/Header/index.js","components/OrderItem/index.js","components/OrderList/index.js","components/App/index.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","OrderItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpenOrCloseEditArea","data","ifCommented","setState","editting","state","handleCommentChange","e","comment","target","value","handleClickStars","stars","handleCancelComment","handleSubmitComment","id","_this$state","onSubmitCallback","_this$props$data","shop","product","price","picture","alt","src","onClick","renderEditArea","onChange","maxLength","placeholder","renderStars","_this2","map","item","index","lightClass","key","bind","OrderList","handleSubmitCallback","newOrderList","orderList","objectSpread","fetch","then","res","ok","json","_this3","components_OrderItem","App","components_Header","components_OrderList","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e38b541b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './style.css'\r\nclass Header extends Component {\r\n    render () {\r\n        return (\r\n            <div className='header' >\r\n                {/* 我的订单 */}\r\n                点餐啦\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport './style.css';\r\nclass OrderItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ \r\n            //首先要有属性，下面才能通过const {} 解析出属性\r\n            editting: false,\r\n            stars   : props.data.stars || 0,    //这里不是来自于api，而是从上一次提交评价后才读取出来的\r\n            comment : props.data.comment || \"\"  //这里不是来自于api，而是从上一次提交评价后才读取出来的\r\n        }\r\n    }\r\n  \r\n    render () {\r\n        const {shop,product,price,picture,ifCommented} = this.props.data;  //从属性值中解析出字段\r\n\r\n        return (\r\n            <div className='orderItem'>\r\n                <div className='orderItem__containner'>\r\n                    <div className='orderItem__picContainner'> \r\n                        <img alt='' className='orderItem__pic' src={picture} />\r\n                    </div>\r\n                    <div className='orderItem__content'>\r\n                        <div className='orderItem__product'>{product}</div>\r\n                        <div className='orderItem__shop'>{shop}</div>\r\n                        <div className='orderItem__detail'>\r\n                            <div className='orderItem__price'>￥{price} </div>\r\n                            <div className='orderItem__btn '>\r\n                            { // 判断\r\n                                ifCommented ? ( \r\n                                <button className='orderItem__btn--gray' onClick={this.handleOpenOrCloseEditArea}>已评价</button>\r\n                                ):(\r\n                                <button className='orderItem__btn--red' onClick={this.handleOpenOrCloseEditArea}>未评价</button>\r\n                                )\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {this.state.editting?this.renderEditArea():null}\r\n          \r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderEditArea(){\r\n        return (\r\n            <div className='orderItem__commentContainer'>\r\n                \r\n                {/* textarea好像需要写成完成闭合的 */}\r\n                <textarea onChange={this.handleCommentChange} value={this.state.comment}  maxLength='300' className='orderItem__comment' placeholder='请输入您的评价'></textarea> \r\n                <div className='orderItem__StarContainer'>\r\n                {this.renderStars()}\r\n                </div>\r\n                <div >\r\n                    <button className=' orderItem__btn--red'  onClick={this.handleSubmitComment}>提交</button>\r\n                    <button className=' orderItem__btn--gray' onClick={this.handleCancelComment}>取消</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStars(){\r\n        const {stars} = this.state;\r\n        return (\r\n            <div>\r\n            {[1,2,3,4,5].map((item,index)=>{ //map 作用在数组上\r\n                const lightClass = stars >=item ?\"orderItem__star--light\":\"\";\r\n                return (\r\n                    <span key={index} className={\"orderItem__star \"+lightClass} onClick={this.handleClickStars.bind(this,item)}>★</span>\r\n                ) // .bind(item) ,就不需要使用data-的方式取值了\r\n            })}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleOpenOrCloseEditArea = () => { //使用es6的箭头函数保证函数中的this执行当前组件的实例\r\n        // 如果是已经评价，这里只能关闭不能打开评价区域\r\n        if(this.props.data.ifCommented){\r\n            return;\r\n        }\r\n        this.setState({\r\n            editting: !this.state.editting\r\n        })\r\n    }\r\n\r\n    handleCommentChange = (e) =>{\r\n        this.setState({\r\n            comment: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClickStars = (stars) => {\r\n        //alert(JSON.stringify(stars))\r\n        this.setState({\r\n            stars  //即 stars:stars\r\n        })\r\n    }\r\n    handleCancelComment = () => {\r\n        this.setState({\r\n            editting: false,\r\n            comment : \"\",\r\n            stars   : 0\r\n        })\r\n    }\r\n    handleSubmitComment  = () => {\r\n        const {id }            = this.props.data;\r\n        const {comment,stars } = this.state;\r\n        this.setState({\r\n            editting: false\r\n        })\r\n        //提交服务器\r\n        this.props.onSubmitCallback(id,comment,stars) // onSubmitCallback 在父组件中绑定在OrderItem组件上，应该在接口请求完成后执行\r\n    }\r\n}\r\n\r\nexport default OrderItem\r\n","import React, { Component } from 'react'\r\nimport OrderItem from './../OrderItem'\r\nimport './style.css'\r\n\r\nconst testdata = [ //停止使用，使用mock api 替换\r\n    {\r\n        id         : 1,\r\n        shop       : \"商店店名1\",\r\n        picture    : \"https://img1.mukewang.com/585487a5000130ed04190419-140-140.jpg\",\r\n        product    : \"商品名称1\",\r\n        price      : \"10\",\r\n        ifCommented: false\r\n    },\r\n    {\r\n        id         : 2,\r\n        shop       : \"商店店名2\",\r\n        picture    : \"https://img1.mukewang.com/585487a5000130ed04190419-140-140.jpg\",\r\n        product    : \"商品名称2\",\r\n        price      : \"20\",\r\n        ifCommented: true\r\n    },\r\n    {\r\n        id         : 3,\r\n        shop       : \"商店店名3\",\r\n        picture    : \"https://img1.mukewang.com/585487a5000130ed04190419-140-140.jpg\",\r\n        product    : \"商品名称3\",\r\n        price      : \"30\",\r\n        ifCommented: true\r\n    }\r\n]\r\nclass OrderList extends Component {\r\n    constructor(props){ //通过构造器 传值\r\n        super(props);\r\n        this.state = {orderList:[]};\r\n    }\r\n    componentDidMount (){\r\n        // 会有跨域的问题，所以调试时还是要使用 ./mock/orders.json\r\n        fetch('https://jiangjiesheng.gitee.io/react-demo-orderlist/mock/orders.json').then(res => { //Promise对象\r\n            // console.log(res) \r\n            if(res.ok){ // 包装对象中的值,不是api中的字段\r\n                res.json().then(orderList=>{ \r\n                    this.setState(\r\n                        {\r\n                            orderList \r\n                        }\r\n                    );\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <div className='orderList'>\r\n                {\r\n                    this.state.orderList.map(item => {  // testdata \r\n                        return <OrderItem key={item.id} data={item} onSubmitCallback={this.handleSubmitCallback}/> \r\n                    })\r\n                }\r\n                {/* <OrderItem data={data}/> 这是被注释到的 */}\r\n            </div>\r\n        )\r\n    }\r\n    handleSubmitCallback  = (id,comment,stars) => { //应该在接口请求完成后执行\r\n      const newOrderList = this.state.orderList.map(item => {\r\n            return item.id === id ? \r\n            {\r\n                ...item,comment, stars, ifCommented: true  //es6语法，生成新对象\r\n                        }      : item;\r\n        });\r\n     this.setState({\r\n            orderList: newOrderList\r\n         });\r\n    }\r\n}\r\n\r\nexport default OrderList\r\n","import React, { Component } from 'react';\nimport './style.css';\nimport Header from './../Header'\nimport OrderList from './../OrderList'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header/>\n        <OrderList/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}